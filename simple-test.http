### üéì Universal Student API - Complete Test Collection
### Use this file with REST Client extension in VS Code
### Base URL: https://universal-student-api-production.up.railway.app

@baseUrl = https://universal-student-api-production.up.railway.app
@token = YOUR_JWT_TOKEN_HERE

### ============================================
### üìä SYSTEM ENDPOINTS
### ============================================

### 1. Get API Information
GET {{baseUrl}}/
Accept: application/json

### 2. Health Check
GET {{baseUrl}}/health
Accept: application/json

### 3. API Status
GET {{baseUrl}}/api/v1/status
Accept: application/json

### 4. Performance Metrics
GET {{baseUrl}}/performance
Accept: application/json

### 5. Available Domains
GET {{baseUrl}}/api/v1/domains
Accept: application/json

### ============================================
### üé¨ MOVIES DOMAIN EXAMPLES
### ============================================

### 6. Get Movies (First 10)
GET {{baseUrl}}/api/v1/movies/products?limit=10
Accept: application/json

### 7. Get Movies (Page 2)
GET {{baseUrl}}/api/v1/movies/products?page=2&limit=5
Accept: application/json

### 8. Get Single Movie
GET {{baseUrl}}/api/v1/movies/products/1
Accept: application/json

### 9. Search Movies by Name
GET {{baseUrl}}/api/v1/movies/products/search?q=batman
Accept: application/json

### 10. Get Movie Categories
GET {{baseUrl}}/api/v1/movies/categories
Accept: application/json

### 11. Get Movie Brands
GET {{baseUrl}}/api/v1/movies/brands
Accept: application/json

### 12. Filter Movies by Category
GET {{baseUrl}}/api/v1/movies/products/search?category=action
Accept: application/json

### 13. Filter Movies by Price Range
GET {{baseUrl}}/api/v1/movies/products/search?min_price=10&max_price=25
Accept: application/json

### ============================================
### üìö BOOKS DOMAIN EXAMPLES
### ============================================

### 14. Get Books
GET {{baseUrl}}/api/v1/books/products?limit=10
Accept: application/json

### 15. Search Books
GET {{baseUrl}}/api/v1/books/products/search?q=javascript
Accept: application/json

### 16. Get Book Categories
GET {{baseUrl}}/api/v1/books/categories
Accept: application/json

### 17. Get Single Book
GET {{baseUrl}}/api/v1/books/products/501
Accept: application/json

### ============================================
### üì± ELECTRONICS DOMAIN EXAMPLES
### ============================================

### 18. Get Electronics
GET {{baseUrl}}/api/v1/electronics/products?limit=10
Accept: application/json

### 19. Search Electronics
GET {{baseUrl}}/api/v1/electronics/products/search?q=iphone
Accept: application/json

### 20. Get Electronics Categories
GET {{baseUrl}}/api/v1/electronics/categories
Accept: application/json

### 21. Filter Electronics by Brand
GET {{baseUrl}}/api/v1/electronics/products/search?brand=apple
Accept: application/json

### ============================================
### üçï RESTAURANTS DOMAIN EXAMPLES
### ============================================

### 22. Get Restaurants
GET {{baseUrl}}/api/v1/restaurants/products?limit=10
Accept: application/json

### 23. Search Restaurants
GET {{baseUrl}}/api/v1/restaurants/products/search?q=pizza
Accept: application/json

### 24. Get Restaurant Categories
GET {{baseUrl}}/api/v1/restaurants/categories
Accept: application/json

### ============================================
### üëï FASHION DOMAIN EXAMPLES
### ============================================

### 25. Get Fashion Items
GET {{baseUrl}}/api/v1/fashion/products?limit=10
Accept: application/json

### 26. Search Fashion
GET {{baseUrl}}/api/v1/fashion/products/search?q=jeans
Accept: application/json

### 27. Get Fashion Categories
GET {{baseUrl}}/api/v1/fashion/categories
Accept: application/json

### ============================================
### üéÆ GAMES DOMAIN EXAMPLES
### ============================================

### 28. Get Games
GET {{baseUrl}}/api/v1/games/products?limit=10
Accept: application/json

### 29. Search Games
GET {{baseUrl}}/api/v1/games/products/search?q=fifa
Accept: application/json

### 30. Get Game Categories
GET {{baseUrl}}/api/v1/games/categories
Accept: application/json

### ============================================
### üîê AUTHENTICATION FLOW
### ============================================

### 31. Login (Demo User)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "demo",
  "password": "demo123"
}

### 32. Login (Teacher)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "teacher",
  "password": "demo123"
}

### 33. Register New User
POST {{baseUrl}}/api/v1/auth/register
Content-Type: application/json

{
  "username": "student2",
  "email": "student2@example.com",
  "password": "password123",
  "first_name": "John",
  "last_name": "Doe"
}

### 34. Get User Profile (Requires Token)
GET {{baseUrl}}/api/v1/auth/profile
Authorization: Bearer {{token}}
Accept: application/json

### ============================================
### üõí SHOPPING CART (Protected Routes)
### ============================================

### 35. Get Cart
GET {{baseUrl}}/api/v1/cart
Authorization: Bearer {{token}}
Accept: application/json

### 36. Add Movie to Cart
POST {{baseUrl}}/api/v1/cart/add
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "product_id": 1,
  "domain": "movies",
  "quantity": 2
}

### 37. Add Book to Cart
POST {{baseUrl}}/api/v1/cart/add
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "product_id": 501,
  "domain": "books",
  "quantity": 1
}

### 38. Update Cart Item
PUT {{baseUrl}}/api/v1/cart/update/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "quantity": 3
}

### 39. Remove Cart Item
DELETE {{baseUrl}}/api/v1/cart/remove/1
Authorization: Bearer {{token}}

### 40. Clear Cart
DELETE {{baseUrl}}/api/v1/cart/clear
Authorization: Bearer {{token}}

### 41. Mock Checkout
POST {{baseUrl}}/api/v1/cart/checkout
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "payment_method": "credit_card",
  "shipping_address": {
    "street": "123 Main St",
    "city": "Tbilisi",
    "country": "Georgia"
  }
}

### ============================================
### üéµ MUSIC DOMAIN EXAMPLES
### ============================================

### 42. Get Music Albums
GET {{baseUrl}}/api/v1/music/products?limit=10
Accept: application/json

### 43. Search Music
GET {{baseUrl}}/api/v1/music/products/search?q=rock
Accept: application/json

### 44. Get Music Categories
GET {{baseUrl}}/api/v1/music/categories
Accept: application/json

### ============================================
### ü•ó FOOD DOMAIN EXAMPLES
### ============================================

### 45. Get Food Products
GET {{baseUrl}}/api/v1/food/products?limit=10
Accept: application/json

### 46. Search Organic Food
GET {{baseUrl}}/api/v1/food/products/search?q=organic
Accept: application/json

### 47. Get Food Categories
GET {{baseUrl}}/api/v1/food/categories
Accept: application/json

### ============================================
### üß∏ TOYS DOMAIN EXAMPLES
### ============================================

### 48. Get Toys
GET {{baseUrl}}/api/v1/toys/products?limit=10
Accept: application/json

### 49. Search Toys
GET {{baseUrl}}/api/v1/toys/products/search?q=lego
Accept: application/json

### 50. Get Toy Categories
GET {{baseUrl}}/api/v1/toys/categories
Accept: application/json

### ============================================
### üè® HOTELS DOMAIN EXAMPLES
### ============================================

### 51. Get Hotels
GET {{baseUrl}}/api/v1/hotels/products?limit=10
Accept: application/json

### 52. Search Hotels
GET {{baseUrl}}/api/v1/hotels/products/search?q=luxury
Accept: application/json

### 53. Get Hotel Categories
GET {{baseUrl}}/api/v1/hotels/categories
Accept: application/json

### ============================================
### üöó CARS DOMAIN EXAMPLES
### ============================================

### 54. Get Cars
GET {{baseUrl}}/api/v1/cars/products?limit=10
Accept: application/json

### 55. Search Cars
GET {{baseUrl}}/api/v1/cars/products/search?q=tesla
Accept: application/json

### 56. Get Car Categories
GET {{baseUrl}}/api/v1/cars/categories
Accept: application/json

### ============================================
### üíä MEDICINES DOMAIN EXAMPLES
### ============================================

### 57. Get Medicines
GET {{baseUrl}}/api/v1/medicines/products?limit=10
Accept: application/json

### 58. Search Medicines
GET {{baseUrl}}/api/v1/medicines/products/search?q=vitamin
Accept: application/json

### 59. Get Medicine Categories
GET {{baseUrl}}/api/v1/medicines/categories
Accept: application/json

### ============================================
### üìñ COURSES DOMAIN EXAMPLES
### ============================================

### 60. Get Courses
GET {{baseUrl}}/api/v1/courses/products?limit=10
Accept: application/json

### 61. Search Courses
GET {{baseUrl}}/api/v1/courses/products/search?q=programming
Accept: application/json

### 62. Get Course Categories
GET {{baseUrl}}/api/v1/courses/categories
Accept: application/json

### ============================================
### üé™ EVENTS DOMAIN EXAMPLES
### ============================================

### 63. Get Events
GET {{baseUrl}}/api/v1/events/products?limit=10
Accept: application/json

### 64. Search Events
GET {{baseUrl}}/api/v1/events/products/search?q=conference
Accept: application/json

### 65. Get Event Categories
GET {{baseUrl}}/api/v1/events/categories
Accept: application/json

### ============================================
### üì± APPS DOMAIN EXAMPLES
### ============================================

### 66. Get Apps
GET {{baseUrl}}/api/v1/apps/products?limit=10
Accept: application/json

### 67. Search Apps
GET {{baseUrl}}/api/v1/apps/products/search?q=instagram
Accept: application/json

### 68. Get App Categories
GET {{baseUrl}}/api/v1/apps/categories
Accept: application/json

### ============================================
### ‚úàÔ∏è FLIGHTS DOMAIN EXAMPLES
### ============================================

### 69. Get Flights
GET {{baseUrl}}/api/v1/flights/products?limit=10
Accept: application/json

### 70. Search Flights
GET {{baseUrl}}/api/v1/flights/products/search?q=london
Accept: application/json

### 71. Get Flight Categories
GET {{baseUrl}}/api/v1/flights/categories
Accept: application/json

### ============================================
### üêï PETS DOMAIN EXAMPLES
### ============================================

### 72. Get Pets
GET {{baseUrl}}/api/v1/pets/products?limit=10
Accept: application/json

### 73. Search Pets
GET {{baseUrl}}/api/v1/pets/products/search?q=dog
Accept: application/json

### 74. Get Pet Categories
GET {{baseUrl}}/api/v1/pets/categories
Accept: application/json

### ============================================
### üè† REAL ESTATE DOMAIN EXAMPLES
### ============================================

### 75. Get Real Estate
GET {{baseUrl}}/api/v1/realestate/products?limit=10
Accept: application/json

### 76. Search Real Estate
GET {{baseUrl}}/api/v1/realestate/products/search?q=apartment
Accept: application/json

### 77. Get Real Estate Categories
GET {{baseUrl}}/api/v1/realestate/categories
Accept: application/json

### ============================================
### ‚öΩ SPORTS DOMAIN EXAMPLES
### ============================================

### 78. Get Sports Products
GET {{baseUrl}}/api/v1/sports/products?limit=10
Accept: application/json

### 79. Search Sports
GET {{baseUrl}}/api/v1/sports/products/search?q=nike
Accept: application/json

### 80. Get Sports Categories
GET {{baseUrl}}/api/v1/sports/categories
Accept: application/json

### ============================================
### üîß TOOLS DOMAIN EXAMPLES
### ============================================

### 81. Get Tools
GET {{baseUrl}}/api/v1/tools/products?limit=10
Accept: application/json

### 82. Search Tools
GET {{baseUrl}}/api/v1/tools/products/search?q=drill
Accept: application/json

### 83. Get Tool Categories
GET {{baseUrl}}/api/v1/tools/categories
Accept: application/json

### ============================================
### üß™ ADVANCED TESTING SCENARIOS
### ============================================

### 84. Test Pagination (Large Page)
GET {{baseUrl}}/api/v1/movies/products?page=10&limit=50
Accept: application/json

### 85. Test Maximum Limit
GET {{baseUrl}}/api/v1/movies/products?limit=500
Accept: application/json

### 86. Test Combined Filters
GET {{baseUrl}}/api/v1/electronics/products/search?q=iphone&min_price=500&max_price=1500&category=phones
Accept: application/json

### 87. Test Invalid Domain (Should Return 404)
GET {{baseUrl}}/api/v1/invalid-domain/products
Accept: application/json

### 88. Test Invalid Product ID (Should Return 404)
GET {{baseUrl}}/api/v1/movies/products/999999
Accept: application/json

### 89. Test Empty Search (Should Return 400)
GET {{baseUrl}}/api/v1/movies/products/search
Accept: application/json

### 90. Test Rate Limiting (Make Multiple Requests)
GET {{baseUrl}}/api/v1/movies/products
Accept: application/json

### ============================================
### üéØ PERFORMANCE TESTING
### ============================================

### 91. Test Search Performance
GET {{baseUrl}}/api/v1/movies/products/search?q=action
Accept: application/json

### 92. Test Large Dataset Query
GET {{baseUrl}}/api/v1/movies/products?limit=100
Accept: application/json

### 93. Test Complex Search Query
GET {{baseUrl}}/api/v1/books/products/search?q=javascript&category=technology&min_price=10&max_price=100
Accept: application/json

### ============================================
### üìä ANALYTICS & MONITORING
### ============================================

### 94. Check Database Stats
GET {{baseUrl}}/api/v1/status
Accept: application/json

### 95. Monitor Performance
GET {{baseUrl}}/performance
Accept: application/json

### 96. Health Check with Details
GET {{baseUrl}}/health
Accept: application/json

### ============================================
### üö® ERROR HANDLING TESTS
### ============================================

### 97. Test Malformed JSON (Should Return 400)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "demo"
  "password": "demo123"  // Missing comma
}

### 98. Test Invalid Login (Should Return 401)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "invalid",
  "password": "wrong"
}

### 99. Test Protected Route Without Token (Should Return 401)
GET {{baseUrl}}/api/v1/auth/profile
Accept: application/json

### 100. Test Protected Route With Invalid Token (Should Return 401)
GET {{baseUrl}}/api/v1/auth/profile
Authorization: Bearer invalid_token_here
Accept: application/json

### ============================================
### üéì STUDENT LEARNING EXERCISES
### ============================================

### üìù Exercise 1: Basic API Consumption
# Try requests 1-5 to understand API structure

### üìù Exercise 2: Domain Exploration
# Pick a domain and try requests 6-13 pattern for your chosen domain

### üìù Exercise 3: Search Implementation
# Build a search interface using requests 14, 19, 23, 26, 29

### üìù Exercise 4: Authentication Flow
# Implement login using requests 31-34

### üìù Exercise 5: Shopping Cart
# Create a shopping cart using requests 35-41

### üìù Exercise 6: Multi-Domain Store
# Build a store that uses multiple domains (movies, books, electronics)

### üìù Exercise 7: Advanced Features
# Implement pagination, filtering, and complex search

### üìù Exercise 8: Error Handling
# Use requests 97-100 to understand error handling

### ============================================
### üîç DEBUGGING TIPS
### ============================================

# 1. Always check the response status code
# 2. Look for 'success' field in JSON responses
# 3. Check 'message' field for error details
# 4. Use browser developer tools to inspect network requests
# 5. Test authentication by checking token in localStorage
# 6. Monitor rate limits - wait if you get 429 errors
# 7. Check domain spelling - case sensitive!
# 8. Use pagination for large datasets

### ============================================
### üìö LEARNING RESOURCES
### ============================================

# 1. REST Client Extension: https://marketplace.visualstudio.com/items?itemName=humao.rest-client
# 2. HTTP Status Codes: https://httpstatuses.com/
# 3. JSON Formatter: https://jsonformatter.curiousconcept.com/
# 4. JWT Decoder: https://jwt.io/
# 5. API Testing Guide: https://blog.postman.com/api-testing/

### ============================================
### üéØ QUICK REFERENCE
### ============================================

# Base URL: https://universal-student-api-production.up.railway.app
# Auth: Bearer token from login response
# Rate Limits: 100 requests/15min (general), 200 requests/5min (products)
# Domains: movies, books, electronics, restaurants, fashion, games, music, food, toys, hotels, cars, medicines, courses, events, apps, flights, pets, realestate, sports, tools
# Demo Users: demo/demo123, teacher/demo123

### ============================================
### üöÄ HAPPY CODING!
### ============================================

# This collection covers all major API features
# Perfect for learning REST API consumption
# Use with React, Vue, Angular, or vanilla JavaScript
# Ready for student projects and assignments!